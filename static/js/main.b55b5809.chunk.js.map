{"version":3,"sources":["components/App/actions.js","components/Panel/index.js","components/Toggle/index.js","components/App/index.js","index.js"],"names":["googleSheetUrl","fetchData","a","async","fetch","results","json","data","parseData","feed","entry","titleMap","newRow","forEach","d","cell","title","content","row","match","col","split","last","Object","keys","push","colors","Panel","link","image","text","expandAll","React","useState","sample","color","expand","setExpand","useEffect","externalLink","e","url","stopPropagation","window","open","className","onClick","prev","classnames","src","Toggle","onChange","type","App","panelData","setPanelData","localStorage","getItem","setExpandAll","href","target","setItem","style","padding","length","size","margin","css","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b55b5809.chunk.js","sourcesContent":["import { last } from \"lodash\"\r\nconst googleSheetUrl = \"https://spreadsheets.google.com/feeds/cells/1q6rrzA6Atw_i4RqmjffKyU01gCdTL43jcZW7smMTf9Y/1/public/full?alt=json\"\r\n\r\nexport async function fetchData() {\r\n  const results = await fetch(googleSheetUrl)\r\n  const data = await results.json()\r\n  return parseData(data.feed.entry)\r\n}\r\n\r\n/**\r\n\r\n1. go through [A-Z]1 (the first row) and collect titles corresponding to letter columns:\r\n\r\nexample:\r\n  {\r\n    A: 'url'\r\n    B: 'description'\r\n  }\r\n\r\n2. loop through rest and create new object connecting content to title via titleMap  \r\n\r\n*/\r\nfunction parseData(data) {\r\n  const titleMap = {}\r\n  const results = []\r\n  let newRow = {}\r\n\r\n  data.forEach(d => {\r\n    const cell = d.title[\"$t\"]\r\n    const content = d.content[\"$t\"]\r\n    const row = cell.match(/[0-9]+$/)[0]\r\n    const col = cell.split(row)[0]\r\n\r\n    if (row === \"1\") {\r\n      titleMap[col] = content\r\n    } else {\r\n      newRow[titleMap[col]] = content\r\n      if (col !== last(Object.keys(titleMap))) return // there's still more to collect\r\n      results.push({ ...newRow })\r\n      newRow = {}\r\n    }\r\n  })\r\n\r\n  return results\r\n}\r\n","import React from \"react\"\r\nimport { sample } from \"lodash\"\r\nimport classnames from \"classnames\"\r\n\r\nconst colors = [\r\n  \"bg-primary text-white\",\r\n  \"bg-secondary\",\r\n  \"bg-success\",\r\n  \"bg-danger text-white\",\r\n  \"bg-warning\",\r\n  \"bg-info text-white\",\r\n  \"bg-light\",\r\n  \"bg-dark\",\r\n  \"bg-white\"\r\n]\r\n\r\nfunction Panel({ link, image, text, title, expandAll }) {\r\n  const [color] = React.useState(sample(colors))\r\n  const [expand, setExpand] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    setExpand(expandAll)\r\n  }, [expandAll]) // listening for expandAll changes\r\n\r\n  const externalLink = (e, url) => {\r\n    e.stopPropagation()\r\n    window.open(url, \"_blank\")\r\n  }\r\n\r\n  return (\r\n    <div className='col-lg-4 col-md-6 col-12 animated fadeIn' onClick={() => setExpand(prev => !prev)}>\r\n      <div className={classnames(\"card\", \"mb-3\", color)}>\r\n        <div className='card-header'>\r\n          {\" \"}\r\n          <img className='w-100' src={image} />\r\n        </div>\r\n        <div className='card-body'>\r\n          <h5 className='card-title mb-0'>{title}</h5>\r\n          <p className={classnames(\"mt-3\", \"card-text\", \"animated\", \"fadeIn\", { \"d-none\": !expand })}>{text}</p>\r\n          <div className={classnames(\"card-text\", \"animated\", \"fadeIn\", { \"d-none\": !expand })}></div>\r\n        </div>\r\n        <div className={classnames(\"card-footer\", \"animated\", \"fadeIn\", { \"d-none\": !expand })}>\r\n          <div className='row'>\r\n            <div className='col text-center'>\r\n              <div\r\n                className='card-footer-item'\r\n                onClick={e => externalLink(e, `https://github.com/nomastickles/react-hook-examples/tree/master/examples/${link}`)}\r\n              >\r\n                <i className='fab fa-2x fa-github' />\r\n              </div>\r\n            </div>\r\n            <div className='col text-center'>/////</div>\r\n\r\n            <div className='col text-center'>\r\n              <div\r\n                className='card-footer-item card-footer-item-2'\r\n                onClick={e => externalLink(e, `https://codesandbox.io/s/github/nomastickles/react-hook-examples/tree/master/examples/${link}`)}\r\n              >\r\n                <i className='fas fa-2x fa-laptop-code' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Panel\r\n","import React from \"react\"\r\nimport classnames from \"classnames\"\r\n\r\nfunction Toggle({ onChange, expandAll }) {\r\n  return (\r\n    <div className='w-100 text-right'>\r\n      <button onClick={onChange} type='button' className={classnames(\"float-right \", \"btn\", { \"btn-primary\": !expandAll, \"btn-secondary\": expandAll })}>\r\n        {expandAll ? \"collapse -\" : \"expand +\"}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toggle\r\n","import React from \"react\"\r\nimport { chunk } from \"lodash\"\r\nimport { GridLoader as Loader } from \"react-spinners\"\r\nimport LazyLoad from \"react-lazyload\"\r\nimport { fetchData } from \"./actions\"\r\nimport Panel from \"../Panel\"\r\nimport Toggle from \"../Toggle\"\r\n\r\nfunction App() {\r\n  const [panelData, setPanelData] = React.useState([])\r\n  const [expandAll, setExpandAll] = React.useState(localStorage.getItem(\"expandAll\") === \"true\")\r\n\r\n  React.useEffect(() => {\r\n    ;(async () => {\r\n      const data = await fetchData()\r\n      //setPanelData(chunk(data, 3))\r\n      setPanelData(data)\r\n    })()\r\n  }, [])\r\n\r\n  const toggleExpand = () => {\r\n    setExpandAll(prev => {\r\n      localStorage.setItem(\"expandAll\", !prev)\r\n      return !prev\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <div className='navbar navbar-expand-lg navbar-light bg-light'>\r\n        <div className='ml-1 row w-100'>\r\n          <div className='col'>\r\n            <div className='navbar-brand mb-0 h1 w-100'>\r\n              <a href='https://github.com/nomastickles/react-hook-examples' className='float-left' target='_blank'>\r\n                React Hook Examples <i className='fab fa-github mr-1' />\r\n              </a>\r\n              <span className='float-left mr-1'> by </span>\r\n              <a href='https://nomastickles.website/' className='float-left' target='_blank'>\r\n                Thomas Nickles\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className='col'>\r\n            <Toggle expandAll={expandAll} onChange={toggleExpand} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ padding: \"20px\" }} className='container'>\r\n        {!panelData.length && <Loader color='#fff' size='50px' margin='10px' css={{ margin: \"0 auto\" }} />}\r\n        <LazyLoad>\r\n          <div className='row'>{!!panelData.length && panelData.map((data, index) => <Panel key={index} {...data} expandAll={expandAll} />)}</div>\r\n        </LazyLoad>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"./index.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}